apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata: 
  name: network-probe-pod-read
  labels:
    app: network-probe
    role: probe
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: 
  name: network-probe-pod-read
  labels:
    app: network-probe
    role: probe
subjects:
  - kind: ServiceAccount
    name: network-probe-reader
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: network-probe-pod-read
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: network-probe-reader
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: network-probe
  namespace: kube-system
  labels:
    app: network-probe
    role: probe
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: network-probe
      role: probe
  template:
    metadata:
      labels:
        app: network-probe
        role: probe
    spec:
      serviceAccount: network-probe-reader
      volumes:
        - name: sysfs
          hostPath:
            path: /sys/fs/cgroup/kubelet.slice/kubelet-kubepods.slice
            type: Directory
        - name: containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
        - name: proc
          hostPath:
            path: /system-proc
            type: Directory
      containers:
        - name: probe
          image: network-probe:demo
          imagePullPolicy: Never
          securityContext:
            privileged: true
          args:
            - --cgroup-path=/host/sys/
            - --proc-fs-path=/host/proc
            - --cluster-cidr=10.244.0.0/16 # kind's default cidr
          ports:
            - containerPort: 3000
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
          - name: sysfs
            mountPath: /host/sys
            readOnly: true
          - name: containerd-socket
            mountPath: /host/containerd.sock
          - name: proc
            mountPath: /host/proc
            readOnly: true
